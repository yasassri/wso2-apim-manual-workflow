name: Promote_APIs
run-name: Promoting API ${{inputs.apiName}}-${{inputs.apiVersion}} From [${{inputs.FromChoice}}] To [${{inputs.ToChoice}}]
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      TenantChoice:
        type: choice
        description: Tenant
        required: true
        options:
        - carbon.super
        - ycr.com
      FromChoice:
        type: choice
        description: 'From Environment'
        required: true
        options:
        - dev
        - qa
      ToChoice:
        type: choice
        description: 'To Environment'
        required: true
        options:
        - qa
        - prod
      apiName:
        description: 'The name of the API to promoted'
        required: true
        type: string
      apiVersion:
        description: 'The version of the API to be promoted'
        required: true
        type: string

jobs:
  
  CheckInputs:
    name: Check User Inputs 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          script: |
            console.log(context.inputs)
            if (${{inputs.FromChoice == inputs.ToChoice}}) {
              core.setFailed('From evironment and to environments are the same!')
            } else if(${{inputs.FromChoice == 'dev'}} && ${{inputs.ToChoice == 'prod'}}) {
              core.setFailed('You cannot move APIs from Dev to Prod, move to QA first then to Prod')
            }
            
  ExportAPI:
    name: Export API from ${{inputs.FromChoice}}
    runs-on: ubuntu-latest
    needs: CheckInputs
    environment:
      name: ${{inputs.FromChoice}}
    steps:
      # Setup apictl
      - name: Setup APICTL
        uses: yasassri/setup-wso2-apictl@v1.2
        with:
          version: '4.1.0'

      - name: Export API from ${{inputs.FromChoice}}
        env:
          APIM_URL: ${{ secrets.APIM_URL }}
          APIM_USER: ${{ secrets.APIM_USER }}
          APIM_PASSWORD: ${{ secrets.APIM_PASSWORD }}
        run: |
          echo "Adding the environment to apictl"
          apictl add env ${{inputs.FromChoice}} --apim $APIM_URL --insecure
          echo $APIM_PASSWORD | apictl login ${{inputs.FromChoice}} --insecure --username $APIM_USER --password-stdin  
          apictl get apis -e ${{inputs.FromChoice}} --insecure
          apictl export api -e ${{inputs.FromChoice}} -n ${{inputs.apiName}} -v ${{inputs.apiVersion}} --insecure
      - name: Caching Exported API ${{inputs.apiName}}_${{inputs.apiVersion}}.zip
        uses: actions/cache@v3
        id: cache-api
        with:
          path: /home/runner/.wso2apictl/exported/apis/${{inputs.FromChoice}}/${{inputs.apiName}}_${{inputs.apiVersion}}.zip
          key: ${{inputs.apiName}}-${{ github.run_id }}

  ImportAPI:
    name: Import API to ${{inputs.ToChoice}} 
    runs-on: ubuntu-latest
    needs: ExportAPI
    environment:
      name: ${{inputs.ToChoice}}
    steps:
      # Setup apictl
      - name: Setup APICTL
        uses: yasassri/setup-wso2-apictl@v1.2
        with:
          version: '4.1.0'
      - name: Uncaching API ${{inputs.apiName}}_${{inputs.apiVersion}}.zip
        uses: actions/cache@v3
        id: cache-api
        with:
          path: /home/runner/.wso2apictl/exported/apis/${{inputs.FromChoice}}/${{inputs.apiName}}_${{inputs.apiVersion}}.zip
          key: ${{inputs.apiName}}-${{ github.run_id }}
      - name: Import API to ${{inputs.ToChoice}}
        env:
          APIM_URL: ${{ secrets.APIM_URL }}
          APIM_USER: ${{ secrets.APIM_USER }}
          APIM_PASSWORD: ${{ secrets.APIM_PASSWORD }}
        run: |
          echo "Adding the environment to apictl"
          apictl add env ${{inputs.ToChoice}} --apim $APIM_URL --insecure
          echo $APIM_PASSWORD | apictl login ${{inputs.ToChoice}} --insecure --username $APIM_USER --password-stdin
          ls -ltr /home/runner/.wso2apictl/exported/apis/${{inputs.FromChoice}}
          apictl import api -f /home/runner/.wso2apictl/exported/apis/${{inputs.FromChoice}}/${{inputs.apiName}}_${{inputs.apiVersion}}.zip -e ${{inputs.ToChoice}} --preserve-provider=false --update=true --insecure
